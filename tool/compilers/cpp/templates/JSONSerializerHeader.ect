/*
 * Copyright 2015 Jan Dalheimer <jan@dalheimer.de>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
arguments: const std::string &toolversion, const std::string &root, const Argonauts::Tool::File &file, const Argonauts::Tool::TypeProvider *types
includes: <string>, "util/StringUtil.h", "DataTypes.h", "tool/compilers/cpp/TypeProviders.h"

// Generated by ProjectArgonauts <%= toolversion %>. DO NOT EDIT!

#pragma once

#include <<%= types->headerForType("ByteArray") %>>
#include <<%= types->headerForType("String") %>>
#include <functional>

#include "<%= root %>.arg.h"

void serialize<%= root %>ToJSON(const <%= root %> &data, std::function<void(const <%= types->type("ByteArray") %>&)> &&callback);
void serialize<%= root %>ToJSON(const <%= root %> &data, std::function<void(const <%= types->type("String") %>&)> &&callback);
<%= types->type("String") %> serialize<%= root %>ToJSON(const <%= root %> &data);

arguments: const std::string &toolversion, const Argonauts::Tool::Enum &enumeration, const Argonauts::Tool::TypeProvider *types
includes: <string>, "DataTypes.h", "tool/compilers/cpp/TypeProviders.h"

// Generated by ProjectArgonauts <%= toolversion %>. DO NOT EDIT!

#pragma once

#include <Argonauts.h>
#include <<%= types->headerForType(enumeration.type) %>>

namespace Argonauts {
namespace Runtime { class Serializer; }
namespace Util { class DelegatingSaxSink; }
}

enum class <%= enumeration.name %> : <%= types->type(enumeration.type) %>
{
<% for (const Argonauts::Tool::EnumEntry &entry : enumeration.entries) { %>
	<%= entry.name %> = <%= entry.value %>,
<% } %>
};

void serialize(const <%= enumeration.name %> data, Argonauts::Runtime::Serializer *serializer);
namespace Argonauts {
namespace Runtime {
template <> HandleParseAction handleParseString<<%= enumeration.name %>>(<%= enumeration.name %> &type, const std::string &val);
template <> HandleParseAction handleParseInteger<<%= enumeration.name %>>(<%= enumeration.name %> &type, const int64_t val);
}
}

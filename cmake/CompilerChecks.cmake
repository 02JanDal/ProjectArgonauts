if(COMPILERCHECKS_CMAKE_INCLUDED)
	return()
endif()
set(COMPILERCHECKS_CMAKE_INCLUDED 1)

include(CheckCXXCompilerFlag)
include(CheckCXXSymbolExists)
include(CheckTypeSize)

macro(_clean_var_if_false VAR)
	if(DEFINED ${VAR} AND NOT ${VAR})
		unset(${VAR})
	endif()
endmacro()

function(require_flag_supported FLAG VARIABLE)
	_clean_var_if_false(${VARIABLE})
	check_cxx_compiler_flag("${FLAG}" ${VARIABLE})
	if(NOT ${VARIABLE})
		message(SEND_ERROR "The current compiler does not support the required flag \"${FLAG}\"")
	else()
		set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${FLAG}" PARENT_SCOPE)
	endif()
	set(${VARIABLE} ${VARIABLE} PARENT_SCOPE)
endfunction()

function(require_symbol_available SYMBOL HEADER VARIABLE)
	_clean_var_if_false(${VARIABLE})
	check_cxx_symbol_exists(${SYMBOL} ${HEADER} ${VARIABLE})
	if(NOT ${VARIABLE})
		message(SEND_ERROR "The current compiler or standard library does not support the required symbol \"${SYMBOL}\"")
	endif()
	set(${VARIABLE} ${VARIABLE} PARENT_SCOPE)
endfunction()

function(set_flag_if_supported FLAG VARIABLE)
	_clean_var_if_false(${VARIABLE})
	check_cxx_compiler_flag("${FLAG}" ${VARIABLE})
	if(${VARIABLE})
		set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${FLAG}" PARENT_SCOPE)
	endif()
	set(${VARIABLE} ${VARIABLE} PARENT_SCOPE)
endfunction()
